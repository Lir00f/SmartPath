"use strict";
/* eslint-disable max-classes-per-file */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SshForwardError = exports.SshConnectError = exports.ProxyForwardError = exports.ProxyConnectError = exports.DatabaseConnectError = void 0;
class BaseError extends Error {
    constructor(message, debugUri, details) {
        super(details ? `${message}\n${details}` : message);
        this.name = this.constructor.name;
        this.details = details;
        this.debugUri = debugUri;
    }
}
class DatabaseConnectError extends BaseError {
    constructor(message, debugDatabaseUri, source = 'Database') {
        // remove tcp protocol because its not added by the user
        const sanitizedUri = debugDatabaseUri.replace('tcp://', '');
        super(`Unable to connect to the given uri: ${sanitizedUri}.`, sanitizedUri, message);
        this.source = source;
    }
}
exports.DatabaseConnectError = DatabaseConnectError;
class ProxyConnectError extends BaseError {
    constructor(message, debugProxyUri) {
        super(`Your proxy has encountered an error. Unable to connect to the given uri: ${debugProxyUri}.`, debugProxyUri, message);
        this.source = 'Proxy';
    }
}
exports.ProxyConnectError = ProxyConnectError;
class ProxyForwardError extends BaseError {
    constructor(message, debugForwardedUri) {
        super(`Your proxy forwarded connection has encountered an error.` +
            `Unable to connect to the given uri: ${debugForwardedUri}.`, debugForwardedUri, message);
        this.source = 'Proxy';
    }
}
exports.ProxyForwardError = ProxyForwardError;
class SshConnectError extends BaseError {
    constructor(message, debugSshUri, source = 'Ssh') {
        super(`Your ssh connection has encountered an error. ` +
            `Unable to connect to the given ssh uri: ${debugSshUri}`, debugSshUri, message);
        this.source = source;
    }
}
exports.SshConnectError = SshConnectError;
class SshForwardError extends BaseError {
    constructor(message, debugForwardedUri) {
        super(`Your ssh forward connection has encountered an error. ` +
            `Unable to connect to the given ssh uri: ${debugForwardedUri}`, debugForwardedUri, message);
        this.source = 'Ssh';
    }
}
exports.SshForwardError = SshForwardError;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Nvbm5lY3Rpb24vZXJyb3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSx5Q0FBeUM7OztBQUl6QyxNQUFlLFNBQVUsU0FBUSxLQUFLO0lBS3BDLFlBQXNCLE9BQWUsRUFBRSxRQUFnQixFQUFFLE9BQWdCO1FBQ3ZFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsT0FBTyxLQUFLLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUVwRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDO1FBQ2xDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQzNCLENBQUM7Q0FDRjtBQUVELE1BQWEsb0JBQXFCLFNBQVEsU0FBUztJQUdqRCxZQUFZLE9BQWUsRUFBRSxnQkFBd0IsRUFBRSxTQUFzQixVQUFVO1FBQ3JGLHdEQUF3RDtRQUN4RCxNQUFNLFlBQVksR0FBRyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQzVELEtBQUssQ0FBQyx1Q0FBdUMsWUFBWSxHQUFHLEVBQUUsWUFBWSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRXJGLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7Q0FDRjtBQVZELG9EQVVDO0FBRUQsTUFBYSxpQkFBa0IsU0FBUSxTQUFTO0lBRzlDLFlBQVksT0FBZSxFQUFFLGFBQXFCO1FBQ2hELEtBQUssQ0FDSCw0RUFBNEUsYUFBYSxHQUFHLEVBQzVGLGFBQWEsRUFDYixPQUFPLENBQ1IsQ0FBQztRQVBLLFdBQU0sR0FBRyxPQUFPLENBQUM7SUFRMUIsQ0FBQztDQUNGO0FBVkQsOENBVUM7QUFFRCxNQUFhLGlCQUFrQixTQUFRLFNBQVM7SUFHOUMsWUFBWSxPQUFlLEVBQUUsaUJBQXlCO1FBQ3BELEtBQUssQ0FDSCwyREFBMkQ7WUFDekQsdUNBQXVDLGlCQUFpQixHQUFHLEVBQzdELGlCQUFpQixFQUNqQixPQUFPLENBQ1IsQ0FBQztRQVJLLFdBQU0sR0FBRyxPQUFPLENBQUM7SUFTMUIsQ0FBQztDQUNGO0FBWEQsOENBV0M7QUFFRCxNQUFhLGVBQWdCLFNBQVEsU0FBUztJQUc1QyxZQUFZLE9BQWUsRUFBRSxXQUFtQixFQUFFLFNBQXNCLEtBQUs7UUFDM0UsS0FBSyxDQUNILGdEQUFnRDtZQUM5QywyQ0FBMkMsV0FBVyxFQUFFLEVBQzFELFdBQVcsRUFDWCxPQUFPLENBQ1IsQ0FBQztRQUNGLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7Q0FDRjtBQVpELDBDQVlDO0FBRUQsTUFBYSxlQUFnQixTQUFRLFNBQVM7SUFHNUMsWUFBWSxPQUFlLEVBQUUsaUJBQXlCO1FBQ3BELEtBQUssQ0FDSCx3REFBd0Q7WUFDdEQsMkNBQTJDLGlCQUFpQixFQUFFLEVBQ2hFLGlCQUFpQixFQUNqQixPQUFPLENBQ1IsQ0FBQztRQVJLLFdBQU0sR0FBRyxLQUFLLENBQUM7SUFTeEIsQ0FBQztDQUNGO0FBWEQsMENBV0MifQ==