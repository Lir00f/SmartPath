"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const sequelize_1 = require("sequelize");
const errors_1 = require("./errors");
function handleErrors(error, options) {
    if (error instanceof errors_1.ProxyForwardError) {
        // means that the ssh is not reachable
        if (options.sshOptions) {
            throw new errors_1.SshConnectError(null, error.debugUri, 'Proxy');
        }
        else {
            // if there is no sshOptions, then the database is the destination and
            // it means that the database is not reachable
            throw new errors_1.DatabaseConnectError(null, error.debugUri, 'Proxy');
        }
    }
    // it means that the database is not reachable
    if (error instanceof errors_1.SshForwardError) {
        throw new errors_1.DatabaseConnectError(null, error.debugUri, 'Ssh');
    }
    if (error instanceof sequelize_1.BaseError) {
        const nameWithoutSequelize = error.name.replace('Sequelize', '');
        const nameWithSpaces = nameWithoutSequelize.replace(/([a-z])([A-Z])/g, (_, m1, m2) => `${m1} ${m2.toLowerCase()}`);
        throw new errors_1.DatabaseConnectError(`${nameWithSpaces}: ${error.message}`, options.debugDatabaseUri);
    }
    throw error;
}
exports.default = handleErrors;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFuZGxlLWVycm9ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb25uZWN0aW9uL2hhbmRsZS1lcnJvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx5Q0FBd0Q7QUFHeEQscUNBS2tCO0FBRWxCLFNBQXdCLFlBQVksQ0FBQyxLQUFZLEVBQUUsT0FBMEI7SUFDM0UsSUFBSSxLQUFLLFlBQVksMEJBQWlCLEVBQUU7UUFDdEMsc0NBQXNDO1FBQ3RDLElBQUksT0FBTyxDQUFDLFVBQVUsRUFBRTtZQUN0QixNQUFNLElBQUksd0JBQWUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQztTQUMxRDthQUFNO1lBQ0wsc0VBQXNFO1lBQ3RFLDhDQUE4QztZQUM5QyxNQUFNLElBQUksNkJBQW9CLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUM7U0FDL0Q7S0FDRjtJQUVELDhDQUE4QztJQUM5QyxJQUFJLEtBQUssWUFBWSx3QkFBZSxFQUFFO1FBQ3BDLE1BQU0sSUFBSSw2QkFBb0IsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUM3RDtJQUVELElBQUksS0FBSyxZQUFZLHFCQUFjLEVBQUU7UUFDbkMsTUFBTSxvQkFBb0IsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDakUsTUFBTSxjQUFjLEdBQUcsb0JBQW9CLENBQUMsT0FBTyxDQUNqRCxpQkFBaUIsRUFDakIsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQzNDLENBQUM7UUFFRixNQUFNLElBQUksNkJBQW9CLENBQUMsR0FBRyxjQUFjLEtBQUssS0FBSyxDQUFDLE9BQU8sRUFBRSxFQUFFLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0tBQ2pHO0lBRUQsTUFBTSxLQUFLLENBQUM7QUFDZCxDQUFDO0FBNUJELCtCQTRCQyJ9