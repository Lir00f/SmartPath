<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Sharp" rel="stylesheet">
    <link rel="stylesheet" href="style.css">
    <title>Личный кабинет</title>
</head>

<body>

    <div class="container">
        <!-- Sidebar Section -->
        <aside>
            <div class="toggle">
                <div class="logo">
                    <img src="images/logo.png">
                    <h2>Smart<span class="danger">Path</span></h2>
                </div>
                <div class="close" id="close-btn">
                    <span class="material-icons-sharp">
                        close
                    </span>
                </div>
            </div>

            <div class="sidebar">
                <a href="#">
                    <span class="material-icons-sharp">
                        dashboard
                    </span>
                    <h3>Дэшборд</h3>
                </a>
                <a href="#">
                    <span class="material-icons-sharp">
                        person_outline
                    </span>
                    <h3>Друзья</h3>
                </a>
                <a href="#">
                    <span class="material-icons-sharp">
                        receipt_long
                    </span>
                    <h3>История</h3>
                </a>
                <a href="lk">
                    <span class="material-icons-sharp">
                        insights
                    </span>
                    <h3>Аналитика</h3>
                </a>
                <a href="messages" >
                    <span class="material-icons-sharp">
                        mail_outline
                    </span>
                    <h3>Сообщения</h3>
                    <span class="message-count">9</span>
                </a>
                <a href="#" class="active">
                    <span class="material-icons-sharp">
                        inventory
                    </span>
                    <h3>Тесты</h3>
                </a>
                <a href="#">
                    <span class="material-icons-sharp">
                        report_gmailerrorred
                    </span>
                    <h3>Отчёты</h3>
                </a>
                <a href="#">
                    <span class="material-icons-sharp">
                        settings
                    </span>
                    <h3>Настройки</h3>
                </a>
                <a href="#">
                    <span class="material-icons-sharp">
                        add
                    </span>
                    <h3>Добавить пользователя</h3>
                </a>
                <a href="#" id="logout-link">
                    <span class="material-icons-sharp">
                        logout
                    </span>
                    <h3>Выход</h3>
                </a>
                <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                <script>
                  $(document).ready(function() {
                    $('#logout-link').click(function(e) {
                      e.preventDefault(); // Предотвращаем стандартное поведение перехода по ссылке
                      
                      $.post('/logout', function() {
                        // Разлогинивание выполнено, перенаправляем пользователя на главную страницу
                        window.location.href = '/';
                      });
                    });
                  });
                </script>
                                
            </div>
        </aside>
         <!-- Main Content -->
         <style>

.close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 25px;
    cursor: pointer;
}
         </style>
            
<main class="messages">
    <div class="test-option" onclick="openTestModal('russian')">Постановка ударения</div>
    <div class="modal-background" id="modalBackground" onclick="closeTestModal()"></div>
    <div class="modal" id="testModal">
        <span class="close" onclick="closeTestModal()">&times;</span>
        <div class="question" id="questionContainer"></div>
        <button onclick="showNextQuestion()">Следующий вопрос</button>
        <button onclick="confirmExit()">Завершить тест</button>
    </div>
</main>


<script>
  const russianQuestions = [
  {
question: "Вопрос 1 <br> <br> Укажите варианты ответов, в которых верно выделена буква, обозначающая ударный гласный звук. Запишите номера ответов.",
options: ["еретИк", "наделИт", " пломбИровать", " цЫган", "эпИграф"],
image: "images/rus1.png" // Замените на реальный URL изображения
},
{
question: "Вопрос 2 <br> <br> Укажите варианты ответов, в которых верно выделена буква, обозначающая ударный гласный звук. Запишите номера ответов.",
options: ["двИжимый", "красивЕйший", "нАчать", "киломЕтр", "мЕстностей"],
image: "images/rus1.png" // Замените на реальный URL изображения
},
{
question: "Вопрос 3 <br> <br> Укажите варианты ответов, в которых верно выделена буква, обозначающая ударный гласный звук. Запишите номера ответов.",
options: ["аэропОрты", "Отрочество", " пОнявший", "накренИт", "нАчавший"],
image: "images/rus1.png" // Замените на реальный URL изображения
},
{
question: "Вопрос 4 <br> <br> Укажите варианты ответов, в которых верно выделена буква, обозначающая ударный гласный звук. Запишите номера ответов.",
options: ["манЯщий", "каталОг", "начАв", "избАлованный", "звОнит"],
image: "images/rus1.png" // Замените на реальный URL изображения
},
{
question: "Вопрос 5 <br> <br> Укажите варианты ответов, в которых верно выделена буква, обозначающая ударный гласный звук. Запишите номера ответов.",
options: ["нарвАла", "обогнАла", "дефИс", "знАчимый", "апострОф"],
image: "images/rus1.png" // Замените на реальный URL изображения
},
{
question: "Вопрос 6 <br> <br> Укажите варианты ответов, в которых верно выделена буква, обозначающая ударный гласный звук. Запишите номера ответов.",
options: ["сИроты", " кУхонный", "врУчит", "налитА", "завИдно"],
image: "images/rus1.png" // Замените на реальный URL изображения
},
{
question: "Вопрос 7 <br> <br> Укажите варианты ответов, в которых верно выделена буква, обозначающая ударный гласный звук. Запишите номера ответов.",
options: ["крАны", "красИвейший", "дозвОнятся", "осведомИшься", "принятА"],
image: "images/rus1.png" // Замените на реальный URL изображения
},

    ];

    let currentQuestionIndex = 0;

    function openTestModal(testType) {
        if (testType === 'russian') {
            showNextQuestion();
            document.getElementById('questionContainer').style.display = 'block';
            document.querySelector('.messages button').style.display = 'block';

            // Показываем модальное окно и фон
            document.getElementById('modalBackground').style.display = 'block';
            document.getElementById('testModal').style.display = 'block';
        } else {
            document.getElementById('questionContainer').innerHTML = '';
            document.getElementById('questionContainer').style.display = 'none';
            document.querySelector('.messages button').style.display = 'none';
        }
    }

    function closeTestModal() {
        // Скрываем модальное окно и фон
        document.getElementById('modalBackground').style.display = 'none';
        document.getElementById('testModal').style.display = 'none';
    }


    function showNextQuestion() {
        if (currentQuestionIndex < russianQuestions.length) {
            const questionContainer = document.getElementById('questionContainer');
            questionContainer.innerHTML = '';

            const currentQuestion = russianQuestions[currentQuestionIndex];
            const questionText = document.createElement('p');
            questionText.innerHTML = currentQuestion.question;
            questionContainer.appendChild(questionText);

            if (currentQuestion.image) {
                const image = document.createElement('img');
                image.src = currentQuestion.image;
                image.style.width = '550px';
                image.style.borderRadius = '20px';
                image.style.marginTop = '10px';
                questionContainer.appendChild(image);
            }

            const optionsContainer = document.createElement('div');
            optionsContainer.className = 'options';

            currentQuestion.options.forEach((option, index) => {
                const optionElement = document.createElement('div');
                optionElement.className = 'option';
                optionElement.innerHTML = `<input type="checkbox" name="answer" value="${index}"> ${option}`;
                optionsContainer.appendChild(optionElement);
            });

            questionContainer.appendChild(optionsContainer);

            currentQuestionIndex++;
        } else {
            closeTestModal();
            alert('Тест по русскому языку завершен!');
        }
    }
</script>
            
        
        
        <style>
              /* Стили для модального окна */
        .modal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            padding: 20px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
            z-index: 1000;
        }

        /* Стили для фона модального окна */
        .modal-background {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }


        .test-option.active {
            background-color: #4CAF50;
            color: white;
        }

        #questionContainer {
            display: none;
            margin-top: 20px;
        }

        .options {
            margin-top: 10px;
        }

        .option {
            margin-bottom: 5px;
        }

        button {
            display: none;
            margin-top: 10px;
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        img {
            max-width: 100%;
            height: auto;
        }
        .test-option {
            display: inline-block;
            margin: 10px;
            padding: 20px;
            border-radius: 10px;
            cursor: pointer;
            width: 250px;
    height: 120px;
    background-color: var(--color-white);
        }


/* Добавьте стили по вашему усмотрению */
.messages {
    padding-top: 40px;
    align-items: center;
    font-family: Arial, sans-serif;
}

.messenger-container {
    display: flex;
    width: 80%;
    margin-top: 20px;
}

.dialog-list {
    flex: 1;
    margin-right: 20px;
}

.dialog-list h2 {
    margin-bottom: 10px;
}

.dialog-list-items {
    list-style-type: none;
    padding: 0;
}

.dialog-list-items li {
    padding: 10px;
    border: 1px solid #ddd;
    margin-bottom: 5px;
    cursor: pointer;
    border-radius: 5px;
}

.dialog-list-items li.active {
    background-color: #f0f0f0;
}

.dialog-container {
    flex: 2;
    display: flex;
    flex-direction: column;
    border: 1px solid #e5e5e5;
    border-radius: 10px;
    padding: 15px;
}

.selected-dialog {
    flex: 1;
    padding: 10px;
    margin-bottom: 20px;
    overflow-y: auto;
    width: 100%;
}   

.message-container {
    width: 100%;
    display: flex;
    flex-direction: column;
}

.message {
    padding: 10px;
    margin-bottom: 10px;
    border-radius: 10px;
}
.your-message {
    background-color: #3498db;
    color: #fff;
}

.friend-message {
    background-color: #e1e1e1;
    color: #333;
}

.align-right {
    text-align: right;
    margin-left: auto; /* Чтобы прижать к правому краю, если ширина 70% */
}

.align-left {
    text-align: left;
    margin-right: auto; /* Чтобы прижать к левому краю, если ширина 70% */
}

.message-input {
    display: flex;
    align-items: center;
}

.message-input input {
    flex: 1;
    padding: 10px;
    margin-right: 10px;
    border-radius: 5px;
}

.message-input button {
    padding: 10px;
    cursor: pointer;
    border-radius: 5px;
}


        </style>
        
        <!-- End of Main Content -->
        <div class="right-section">
            <div class="nav">
                <button id="menu-btn">
                    <span class="material-icons-sharp">
                        menu
                    </span>
                </button>
                <div class="dark-mode">
                    <span class="material-icons-sharp active">
                        light_mode
                    </span>
                    <span class="material-icons-sharp">
                        dark_mode
                    </span>
                </div>

                <div class="profile">
                    <div class="info">

<% if (userId) { %>
    <% var targetUser = users.find(user => user.id === userId); %>
    <% if (targetUser) { %>
        <p>Привет, <b><%= targetUser.username %></b></p>
    <% } else { %>
      <p>User not found</p>
    <% } %>
  <% } else { %>
    <p>User ID not available</p>
  <% } %>
  

  <small class="text-muted">
    <%= targetUser.role_id === 1 ? 'Студент' : (targetUser.role_id === 2 ? 'Администратор' : '') %>
  </small>
  
                    </div>
                    <div class="profile-photo">
                        <img src="<%= targetUser.image %>" alt="Profile Photo">
                      </div>                      
                </div>

            </div>
            <!-- End of Nav -->

         
              <script>
              // Находим все элементы с классом "user-profile"
              const userProfiles = document.querySelectorAll(".user-profile");
              
              // Обработчик клика на элементе "user-profile"
              userProfiles.forEach(profile => {
                profile.addEventListener("click", function() {
                  const modalId = this.getAttribute("data-target"); // Получаем атрибут "data-target"
                  openModal3(modalId); // Открываем соответствующее модальное окно
                });
              });
              
              // Обработчик клика на крестике
              document.getElementById("closeModal3").addEventListener("click", function() {
                const modalId = this.getAttribute("data-modalId");
                closeModal3(modalId);
              });
              
              // Открывает модальное окно по его идентификатору
              function openModal3(modalId) {
                const modal = document.getElementById(modalId);
                modal.style.display = "block";
              }
              
              // Закрывает модальное окно по его идентификатору
              function closeModal3(modalId) {
                const modal = document.getElementById(modalId);
                modal.style.display = "none";
              }
              
              </script>
              <script>
              document.getElementById("avatarForm").addEventListener("submit", function(event) {
                event.preventDefault(); // Предотвращает отправку формы по умолчанию
              
                const avatarURL = document.getElementById("avatarURL").value;
              
                // Отправка POST-запроса на сервер
                fetch('/update-avatar', {
                  method: 'POST',
                  body: JSON.stringify({ url: avatarURL }),
                  headers: {
                    'Content-Type': 'application/json'
                  }
                })
                  .then(response => response.json())
                  .then(data => {
                    alert(data.message); // Показать сообщение об успешной загрузке
                    closeModal3("myModal3"); // Закрыть модальное окно после успешной загрузки
                  })
                  .catch(error => {
                    console.error('Ошибка при загрузке аватара:', error);
                  });
              });
              </script>
              
<style>.modal3 {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
  }
  
  .modal-content3 {
    background-color: white;
    width: 300px;
    margin: 10% auto;
    padding: 20px;
    border-radius: 10px;
    position: relative;
  }
  
  .close3 {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 20px;
    cursor: pointer;
  }
  
  h2 {
    text-align: center;
  }
  
  input {
    width: 100%;
    padding: 10px;
    margin: 10px 0;
  }
  
  button {
    background-color: #007BFF;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
  }
  
  button:hover {
    background-color: #0056b3;
  }

 
  </style>              
              
          
                <script>
document.getElementById("saveReminder").addEventListener("click", function (e) {
    e.preventDefault(); // Отменить стандартное действие формы, чтобы страница не перезагружалась

    const reminderName = document.getElementById("reminderName").value;
    const startDate = document.getElementById("startDate").value;
    const endDate = document.getElementById("endDate").value;

    // Создать объект с данными для отправки на сервер
    const data = {
        reminderName: reminderName,
        startDate: startDate,
        endDate: endDate
    };

    // Отправить данные на сервер с использованием fetch или другой метод отправки данных
    fetch('/add-reminder', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(result => {
        console.log(result); // Вывести результат в консоль
        document.getElementById("reminderModal5").style.display = "none";
    })
    .catch(error => {
        console.error(error);
    });
});


                </script>

                <style>
                    
                    .modal5 {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
}

.modal-content5 {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #fff;
    padding: 20px;
    border-radius: 5px;
    text-align: center;
}

.close {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 20px;
    cursor: pointer;
}

input {
    margin: 10px 0;
    padding: 10px;
}

.bebbutton {
    background-color: #007bff;
    color: #fff;
    border: none;
    padding: 10px 20px;
    cursor: pointer;
}

#addReminderButton {
    cursor: pointer;
}


                </style>

                <script>

document.getElementById("addReminderButton").addEventListener("click", function () {
    document.getElementById("reminderModal5").style.display = "block";
});

document.getElementById("closeModal5").addEventListener("click", function () {
    document.getElementById("reminderModal5").style.display = "none";
});

document.getElementById("saveReminder").addEventListener("click", function () {
    const reminderName = document.getElementById("reminderName").value;
    const startDate = document.getElementById("startDate").value;
    const endDate = document.getElementById("endDate").value;

    // Вы можете здесь отправить данные на сервер или выполнить другие действия с ними
    console.log("Название напоминания:", reminderName);
    console.log("Дата начала:", startDate);
    console.log("Дата окончания:", endDate);

    document.getElementById("reminderModal5").style.display = "none";
});


                </script>



            </div>

        </div>
       
<style>.modal3 {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
  }
  
  .modal-content3 {
    background-color: white;
    width: 300px;
    margin: 10% auto;
    padding: 20px;
    border-radius: 10px;
    position: relative;
  }
  
  .close3 {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 20px;
    cursor: pointer;
  }
  
  h2 {
    text-align: center;
  }
  
  input {
    width: 100%;
    padding: 10px;
    margin: 10px 0;
  }
  
  button {
    background-color: #007BFF;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
  }
  
  button:hover {
    background-color: #0056b3;
  }

  </style>              
           
                
                <style>
                    
                    .modal5 {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
}

.modal-content5 {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #fff;
    padding: 20px;
    border-radius: 5px;
    text-align: center;
}

.close {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 20px;
    cursor: pointer;
}

input {
    margin: 10px 0;
    padding: 10px;
}

.bebbutton {
    background-color: #007bff;
    color: #fff;
    border: none;
    padding: 10px 20px;
    cursor: pointer;
}

#addReminderButton {
    cursor: pointer;
}


                </style>

                <script>

document.getElementById("addReminderButton").addEventListener("click", function () {
    document.getElementById("reminderModal5").style.display = "block";
});

document.getElementById("closeModal5").addEventListener("click", function () {
    document.getElementById("reminderModal5").style.display = "none";
});

document.getElementById("saveReminder").addEventListener("click", function () {
    const reminderName = document.getElementById("reminderName").value;
    const startDate = document.getElementById("startDate").value;
    const endDate = document.getElementById("endDate").value;

    // Вы можете здесь отправить данные на сервер или выполнить другие действия с ними
    console.log("Название напоминания:", reminderName);
    console.log("Дата начала:", startDate);
    console.log("Дата окончания:", endDate);

    document.getElementById("reminderModal5").style.display = "none";
});


                </script>


    </div>

    <script>

const Orders = [
    {
        productName: 'Русский язык',
        productNumber: '85743',
        paymentStatus: '49%',
        status: 'Активный'
    },
    {
        productName: 'Математика(Профильная)',
        productNumber: '97245',
        paymentStatus: '28%',
        status: 'Активный'
    },
    {
        productName: 'Информатика',
        productNumber: '36452',
        paymentStatus: '70%',
        status: 'Активный'
    },
]

    </script>
    <script>

const sideMenu = document.querySelector('aside');
const menuBtn = document.getElementById('menu-btn');
const closeBtn = document.getElementById('close-btn');

const darkMode = document.querySelector('.dark-mode');

menuBtn.addEventListener('click', () => {
    sideMenu.style.display = 'block';
});

closeBtn.addEventListener('click', () => {
    sideMenu.style.display = 'none';
});

darkMode.addEventListener('click', () => {
    document.body.classList.toggle('dark-mode-variables');
    darkMode.querySelector('span:nth-child(1)').classList.toggle('active');
    darkMode.querySelector('span:nth-child(2)').classList.toggle('active');
})


Orders.forEach(order => {
    const tr = document.createElement('tr');
    const trContent = `
        <td>${order.productName}</td>
        <td>${order.productNumber}</td>
        <td>${order.paymentStatus}</td>
        <td class="${order.status === 'Declined' ? 'danger' : order.status === 'Pending' ? 'warning' : 'primary'}">${order.status}</td>
        <td class="primary">Подробнее</td>
    `;
    tr.innerHTML = trContent;
    document.querySelector('table tbody').appendChild(tr);
});

    </script>
</body>

<style>

@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap');

:root{
    --color-primary: #6C9BCF;
    --color-danger: #FF0060;
    --color-success: #1B9C85;
    --color-warning: #F7D060;
    --color-white: #fff;
    --color-info-dark: #7d8da1;
    --color-dark: #363949;
    --color-light: rgba(132, 139, 200, 0.18);
    --color-dark-variant: #677483;
    --color-background: #f6f6f9;

    --card-border-radius: 2rem;
    --border-radius-1: 0.4rem;
    --border-radius-2: 1.2rem;

    --card-padding: 1.8rem;
    --padding-1: 1.2rem;

    --box-shadow: 0 2rem 3rem var(--color-light);
}

.dark-mode-variables{
    --color-background: #181a1e;
    --color-white: #202528;
    --color-dark: #edeffd;
    --color-dark-variant: #a3bdcc;
    --color-light: rgba(0, 0, 0, 0.4);
    --box-shadow: 0 2rem 3rem var(--color-light);
}

*{
    margin: 0;
    padding: 0;
    outline: 0;
    appearance: 0;
    border: 0;
    text-decoration: none;
    box-sizing: border-box;
}

html{
    font-size: 14px;
}

body{
    width: 100vw;
    height: 100vh;
    font-family: 'Poppins', sans-serif;
    font-size: 0.88rem;
    user-select: none;
    overflow-x: hidden;
    color: var(--color-dark);
    background-color: var(--color-background);
}

a{
    color: var(--color-dark);
}

img{
    display: block;
    width: 100%;
    object-fit: cover;
}

h1{
    font-weight: 800;
    font-size: 1.8rem;
}

h2{
    font-weight: 600;
    font-size: 1.4rem;
}

h3{
    font-weight: 500;
    font-size: 0.87rem;
}

small{
    font-size: 0.76rem;
}

p{
    color: var(--color-dark-variant);
}

b{
    color: var(--color-dark);
}

.text-muted{
    color: var(--color-info-dark);
}

.primary{
    color: var(--color-primary);
}

.danger{
    color: var(--color-danger);
}

.success{
    color: var(--color-success);
}

.warning{
    color: var(--color-warning);
}

.container{
    display: grid;
    width: 96%;
    margin: 0 auto;
    gap: 1.8rem;
    grid-template-columns: 12rem auto 23rem;
}

aside{
    height: 100vh;
}

aside .toggle{
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-top: 1.4rem;
}

aside .toggle .logo{
    display: flex;
    gap: 0.5rem;
}

aside .toggle .logo img{
    width: 2rem;
    height: 2rem;
}

aside .toggle .close{
    padding-right: 1rem;
    display: none;
}

aside .sidebar{
    display: flex;
    flex-direction: column;
    background-color: var(--color-white);
    box-shadow: var(--box-shadow);
    border-radius: 15px;
    height: 88vh;
    position: relative;
    top: 1.5rem;
    transition: all 0.3s ease;
}

aside .sidebar:hover{
    box-shadow: none;
}

aside .sidebar a{
    display: flex;
    align-items: center;
    color: var(--color-info-dark);
    height: 3.7rem;
    gap: 1rem;
    position: relative;
    margin-left: 2rem;
    transition: all 0.3s ease;
}

aside .sidebar a span{
    font-size: 1.6rem;
    transition: all 0.3s ease;
}

aside .sidebar a:last-child{
    position: absolute;
    bottom: 2rem;
    width: 100%;
}

aside .sidebar a.active{
    width: 100%;
    color: var(--color-primary);
    background-color: var(--color-light);
    margin-left: 0;
}

aside .sidebar a.active::before{
    content: '';
    width: 6px;
    height: 18px;
    background-color: var(--color-primary);
}

aside .sidebar a.active span{
    color: var(--color-primary);
    margin-left: calc(1rem - 3px);
}

aside .sidebar a:hover{
    color: var(--color-primary);
}

aside .sidebar a:hover span{
    margin-left: 0.6rem;
}

aside .sidebar .message-count{
    background-color: var(--color-danger);
    padding: 2px 6px;
    color: var(--color-white);
    font-size: 11px;
    border-radius: var(--border-radius-1);
}

main{
    margin-top: 1.4rem;
}

main .analyse{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.6rem;
    height: 80vh;
    width: 48vw;
    border-radius: 20px;
    margin-top: 10px;
    background-color: var(--color-white);
}


main .analyse > div{
    background-color: var(--color-white);
    padding: var(--card-padding);
    border-radius: var(--card-border-radius);
    margin-top: 1rem;
    box-shadow: var(--box-shadow);
    cursor: pointer;
    transition: all 0.3s ease;
}

main .analyse > div:hover{
    box-shadow: none;
}

main .analyse > div .status{
    display: flex;
    align-items: center;
    justify-content: space-between;
}

main .analyse h3{
    margin-left: 0.6rem;
    font-size: 1rem;
}

main .analyse .progresss{
    position: relative;
    width: 92px;
    height: 92px;
    border-radius: 50%;
}

main .analyse svg{
    width: 7rem;
    height: 7rem;
}

main .analyse svg circle{
    fill: none;
    stroke-width: 10;
    stroke-linecap: round;
    transform: translate(5px, 5px);
}

main .analyse .sales svg circle{
    stroke: var(--color-success);
    stroke-dashoffset: -30;
    stroke-dasharray: 200;
}

main .analyse .visits svg circle{
    stroke: var(--color-danger);
    stroke-dashoffset: -30;
    stroke-dasharray: 200;
}

main .analyse .searches svg circle{
    stroke: var(--color-primary);
    stroke-dashoffset: -30;
    stroke-dasharray: 200;
}

main .analyse .progresss .percentage{
    position: absolute;
    top: -3px;
    left: -1px;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    width: 100%;
}

main .new-users{
    margin-top: 1.3rem;
}

main .new-users .user-list{
    background-color: var(--color-white);
    padding: var(--card-padding);
    border-radius: var(--card-border-radius);
    margin-top: 1rem;
    box-shadow: var(--box-shadow);
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
    gap: 1.4rem;
    cursor: pointer;
    transition: all 0.3s ease;
}

main .new-users .user-list:hover{
    box-shadow: none;
}

main .new-users .user-list .user{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

main .new-users .user-list .user img{
    width: 5rem;
    height: 5rem;
    margin-bottom: 0.4rem;
    border-radius: 50%;
}

main .recent-orders{
    margin-top: 1.3rem;
}

main .recent-orders h2{
    margin-bottom: 0.8rem;
}

main .recent-orders table{
    background-color: var(--color-white);
    width: 100%;
    padding: var(--card-padding);
    text-align: center;
    box-shadow: var(--box-shadow);
    border-radius: var(--card-border-radius);
    transition: all 0.3s ease;
}

main .recent-orders table:hover{
    box-shadow: none;
}

main table tbody td{
    height: 2.8rem;
    border-bottom: 1px solid var(--color-light);
    color: var(--color-dark-variant);
}

main table tbody tr:last-child td{
    border: none;
}

main .recent-orders a{
    text-align: center;
    display: block;
    margin: 1rem auto;
    color: var(--color-primary);
}

.right-section{
    margin-top: 1.4rem;
}

.right-section .nav{
    display: flex;
    justify-content: end;
    gap: 2rem;
}

.right-section .nav button{
    display: none;
}

.right-section .dark-mode{
    background-color: var(--color-light);
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 1.6rem;
    width: 4.2rem;
    cursor: pointer;
    border-radius: var(--border-radius-1);
}

.right-section .dark-mode span{
    font-size: 1.2rem;
    width: 50%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.right-section .dark-mode span.active{
    background-color: var(--color-primary);
    color: white;
    border-radius: var(--border-radius-1);
}

.right-section .nav .profile{
    display: flex;
    gap: 2rem;
    text-align: right;
}

.right-section .nav .profile .profile-photo{
    width: 2.8rem;
    height: 2.8rem;
    border-radius: 50%;
    overflow: hidden;
}

.right-section .user-profile{
    display: flex;
    justify-content: center;
    text-align: center;
    margin-top: 1rem;
    background-color: var(--color-white);
    padding: var(--card-padding);
    border-radius: var(--card-border-radius);
    box-shadow: var(--box-shadow);
    cursor: pointer;
    transition: all 0.3s ease;
}

.right-section .user-profile:hover{
    box-shadow: none;
}

.right-section .user-profile img{
    width: 11rem;
    height: 11rem;
    margin-bottom: 0.8rem;
    border-radius: 50%;
}

.right-section .user-profile h2{
    margin-bottom: 0.2rem;
}

.right-section .reminders{
    margin-top: 2rem;
}

.right-section .reminders .header{
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 0.8rem;
}

.right-section .reminders .header span{
    padding: 10px;
    box-shadow: var(--box-shadow);
    background-color: var(--color-white);
    border-radius: 50%;
}

.right-section .reminders .notification{
    background-color: var(--color-white);
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 0.7rem;
    padding: 1.4rem var(--card-padding);
    border-radius: var(--border-radius-2);
    box-shadow: var(--box-shadow);
    cursor: pointer;
    transition: all 0.3s ease;
}

.right-section .reminders .notification:hover{
    box-shadow: none;
}

.right-section .reminders .notification .content{
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0;
    width: 100%;
}

.right-section .reminders .notification .icon{
    padding: 0.6rem;
    color: var(--color-white);
    background-color: var(--color-success);
    border-radius: 20%;
    display: flex;
}

.right-section .reminders .notification.deactive .icon{
    background-color: var(--color-danger);
}

.right-section .reminders .add-reminder{
    background-color: var(--color-white);
    border: 2px dashed var(--color-primary);
    color: var(--color-primary);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
}

.right-section .reminders .add-reminder:hover{
    background-color: var(--color-primary);
    color: white;
}

.right-section .reminders .add-reminder div{
    display: flex;
    align-items: center;
    gap: 0.6rem;
}

@media screen and (max-width: 1200px) {
    .container{
        width: 95%;
        grid-template-columns: 7rem auto 23rem;
    }

    aside .logo h2{
        display: none;
    }

    aside .sidebar h3{
        display: none;
    }

    aside .sidebar a{
        width: 5.6rem;
    }

    aside .sidebar a:last-child{
        position: relative;
        margin-top: 1.8rem;
    }

    main .analyse{
        grid-template-columns: 1fr;
        gap: 0;
    }

    main .new-users .user-list .user{
        flex-basis: 40%;
    }

    main .recent-orders {
        width: 94%;
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        margin: 2rem 0 0 0.8rem;
    }

    main .recent-orders table{
        width: 83vw;
    }

    main table thead tr th:last-child,
    main table thead tr th:first-child{
        display: none;
    }

    main table tbody tr td:last-child,
    main table tbody tr td:first-child{
        display: none;
    }

}

@media screen and (max-width: 768px) {
    .container{
        width: 100%;
        grid-template-columns: 1fr;
        padding: 0 var(--padding-1);
    }

    aside{
        position: fixed;
        background-color: var(--color-white);
        width: 15rem;
        z-index: 3;
        box-shadow: 1rem 3rem 4rem var(--color-light);
        height: 100vh;
        left: -100%;
        display: none;
        animation: showMenu 0.4s ease forwards;
    }

    @keyframes showMenu {
       to{
        left: 0;
       } 
    }

    aside .logo{
        margin-left: 1rem;
    }

    aside .logo h2{
        display: inline;
    }

    aside .sidebar h3{
        display: inline;
    }

    aside .sidebar a{
        width: 100%;
        height: 3.4rem;
    }

    aside .sidebar a:last-child{
        position: absolute;
        bottom: 5rem;
    }

    aside .toggle .close{
        display: inline-block;
        cursor: pointer;
    }

    main{
        margin-top: 8rem;
        padding: 0 1rem;
    }

    main .new-users .user-list .user{
        flex-basis: 35%;
    }

    main .recent-orders{
        position: relative;
        margin: 3rem 0 0 0;
        width: 100%;
    }

    main .recent-orders table{
        width: 100%;
        margin: 0;
    }

    .right-section{
        width: 94%;
        margin: 0 auto 4rem;
    }

    .right-section .nav{
        position: fixed;
        top: 0;
        left: 0;
        align-items: center;
        background-color: var(--color-white);
        padding: 0 var(--padding-1);
        height: 4.6rem;
        width: 100%;
        z-index: 2;
        box-shadow: 0 1rem 1rem var(--color-light);
        margin: 0;
    }

    .right-section .nav .dark-mode{
        width: 4.4rem;
        position: absolute;
        left: 66%;
    }

    .right-section .profile .info{
        display: none;
    }

    .right-section .nav button{
        display: inline-block;
        background-color: transparent;
        cursor: pointer;
        color: var(--color-dark);
        position: absolute;
        left: 1rem;
    }

    .right-section .nav button span{
        font-size: 2rem;
    }

}
</style>

</html>